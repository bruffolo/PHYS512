See the Jupyter notebook "Potential.ipynb" for problems 1-4.

For time/iteration count comparison of the relaxation/conjugate gradient/
variable resolution conjugate gradient methods we use a 1024X1024 pixel density
and cylinder of radius 128.

Potential colormaps, Electric field magnitude colormaps and vector field plots, charge distributions,
and with comparison to the approximate analytic solution to this problem are plotted in the 
Jupyter Notebook and seperately included as PNG files.

1) 
    Charge accumulates on the wire surface (the wire and grounded box surrounding it form a capacitor).
    The total charge on the circular cross section of the wire, in the 2D sense, 
    is charge per unit length of the wire(in z), in the 3D sense.

2)
    The convergence criterea for both the relaxation and conjugate gradient solvers is for the 
    maximum difference between two subsequently calculated maps of the potential to be below some 
    tolerence.

    Here the tolerance is chosen to be 1e-6.
    This results in a required time of:
        - 1691.41 seconds (28.19 minutes) or 149196 iterations (RELAXATION METHOD)
        - 34.39 seconds or 1255 iterations (CONJUGATE GRADIENT METHOD)
    Conjugate gradient is much (~120X) faster.

3)
    The variable resolution conjugate gradient takes 15.04 seconds compared to the 34.39 seconds
    required for the direct conjugate gradient method (~2-3X faster in general). 

4)
    A sharp increase in the magnitude of the electric field can be seen on the small diameter 
    pertubation on the wire. This occurs because of a large build up of charge in this region.

    The ratio of the electric field magnitude near the bump vs. the surface of the wire away 
    from the bump is $\approx$ 3-4 (as can be seen from the figure).

5)
    The stability criterion for the 2D heat equation is:

       D <= Δx^2/(4Δt) 

    (from Von Neumann stability analysis).
    Any choice of D, Δx and Δt satisfying the above should result in numerically stable equation 
    that can be solved numerically using the method of relaxation. I set D = 1/8.

    The temperature is ramped linearly on the left hand side of the box.
    Neumann boundary conditions are implemented on the other sides of the box, restricting heatflow out 
    of the box. 

    See the Jupyter notebook "Problem 5.ipynb". Two interactive plots were made. One of the 
    temperature of the box everywhere (as a color map) as a function of time (selectable by user).
    The other of the temperature (at all times) at any distance (selectable by user) along the line 
    from the center of the heated side of the box to the center of the opposite side.

    

